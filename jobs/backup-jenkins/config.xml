<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.15">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.2.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>desc</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.6"/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.41">
    <script>pipeline {
    agent { label &apos;master&apos; }
    stages {
        stage(&apos;tar&apos;){
            steps {
                script {
                library &apos;sysUtils@master&apos;
                sh &apos;&apos;&apos;
                    #!/bin/bash -ex
                    cd $JENKINS_HOME
                    echo &quot;BACKUP_NAME=jenkins-${JENKINS_VERSION}-backup-${currentDate}&quot;
                    BACKUP_NAME=jenkins-${JENKINS_VERSION}-backup-${currentDate}
                	tar cvvf ${BACKUP_NAME}.tar .
                    &apos;&apos;&apos;
                }
            }
        }
        // stage(&apos;compress&apos;){
        //     sh &apos;&apos;&apos;
        //     #!/bin/bash
        //     cd $JENKINS_HOME
        //     BACKUP_NAME=jenkins-${JENKINS_VERSION}-backup-$(date +&quot;%y%m%d%M&quot;)
	       // gzip ${BACKUP_NAME}.tar
	       // &apos;&apos;&apos;
        // }
        // stage(&apos;upload&apos;){
        //     sh &apos;&apos;&apos;
        //     #!/bin/bash
        //     cd $JENKINS_HOME
        //     JENKINS_VERSION=$(docker run jenkins/jenkins:lts --version)
        //     BACKUP_NAME=jenkins-${JENKINS_VERSION}-backup-$(date +&quot;%y%m%d%M&quot;)
        //     aws s3 cp ${BACKUP_NAME}.tar.gz s3://simplee-jenkins-backup
        //     &apos;&apos;&apos;
        // }
        // stage(&apos;clean&apos;){
        //     sh &apos;&apos;&apos;
        //     rm -f ${BACKUP_NAME}*
        //     &apos;&apos;&apos;
        // }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>